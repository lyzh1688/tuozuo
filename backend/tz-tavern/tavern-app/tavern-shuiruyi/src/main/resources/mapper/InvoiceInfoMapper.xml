<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tuozuo.tavern.shuiruyi.mapper.InvoiceInfoMapper">
  <resultMap id="BaseResultMap" type="com.tuozuo.tavern.shuiruyi.model.InvoiceInfo">
    <id column="invoice_id" jdbcType="VARCHAR" property="invoiceId" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="invoice_type" jdbcType="VARCHAR" property="invoiceType" />
    <result column="invoice_amount" jdbcType="DECIMAL" property="invoiceAmount" />
    <result column="recv_amount" jdbcType="DECIMAL" property="recvAmount" />
    <result column="tax" jdbcType="DECIMAL" property="tax" />
    <result column="invoice_status" jdbcType="VARCHAR" property="invoiceStatus" />
    <result column="recv_date" jdbcType="DATE" property="recvDate" />
    <result column="invoice_content" jdbcType="VARCHAR" property="invoiceContent" />
    <result column="delivery_id" jdbcType="VARCHAR" property="deliveryId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="bank_flow_file" jdbcType="VARCHAR" property="bankFlowFile" />
    <result column="auth_letter_file" jdbcType="VARCHAR" property="authLetterFile" />
    <result column="contract_id" jdbcType="VARCHAR" property="contractId" />
    <result column="invoice_date" jdbcType="TIMESTAMP" property="invoiceDate" />
  </resultMap>
  <resultMap id="BaseDetailResultMap" type="com.tuozuo.tavern.shuiruyi.model.InvoiceDetailInfo">
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_party_A_name" jdbcType="VARCHAR" property="companyPartyAName" />
    <result column="company_party_B_name" jdbcType="VARCHAR" property="companyPartyBName" />
    <result column="contract_name" jdbcType="VARCHAR" property="contractName" />
    <result column="invoice_id" jdbcType="VARCHAR" property="invoiceId" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="invoice_type" jdbcType="VARCHAR" property="invoiceType" />
    <result column="invoice_amount" jdbcType="DECIMAL" property="invoiceAmount" />
    <result column="recv_amount" jdbcType="DECIMAL" property="recvAmount" />
    <result column="tax" jdbcType="DECIMAL" property="tax" />
    <result column="invoice_status" jdbcType="VARCHAR" property="invoiceStatus" />
    <result column="recv_date" jdbcType="DATE" property="recvDate" />
    <result column="invoice_content" jdbcType="VARCHAR" property="invoiceContent" />
    <result column="delivery_id" jdbcType="VARCHAR" property="deliveryId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="bank_flow_file" jdbcType="VARCHAR" property="bankFlowFile" />
    <result column="auth_letter_file" jdbcType="VARCHAR" property="authLetterFile" />
    <result column="contract_id" jdbcType="VARCHAR" property="contractId" />
    <result column="invoice_date" jdbcType="TIMESTAMP" property="invoiceDate" />
  </resultMap>
  <resultMap id="BaseStatisticsResultMap" type="com.tuozuo.tavern.shuiruyi.model.InvoiceStatistic">
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="invoice_cnt" jdbcType="INTEGER" property="invoiceCnt" />
    <result column="invoice_amount" jdbcType="DECIMAL" property="invoiceAmount" />
    <result column="invoice_date" jdbcType="VARCHAR" property="invoiceDate" />
  </resultMap>
  <resultMap id="BaseTaxStatisticsResultMap" type="com.tuozuo.tavern.shuiruyi.model.TaxStatistic">
      <result column="custom_name" jdbcType="VARCHAR" property="customName" />
      <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="income_tax" jdbcType="DECIMAL" property="incomeTax" />
    <result column="value_added_tax" jdbcType="DECIMAL" property="valueAddedTax" />
    <result column="total_value_added_tax" jdbcType="DECIMAL" property="totalValueAddedTax" />
    <result column="total_income_tax" jdbcType="DECIMAL" property="totalIncomeTax" />
  </resultMap>
  <select id="selectStatistic"  resultMap="BaseStatisticsResultMap">
     select  t1.company_id, t1.company_name,count(t.invoice_id) invoice_cnt,
     date_format(t.invoice_date,'%Y-%m-%d') invoice_date,sum(t.invoice_amount) invoice_amount
     from invoice_info t  JOIN company_info t1
		on t.company_id = t1.company_id
		 JOIN custom_info t2
		on t1.custom_id = t2.custom_id
		where t2.custom_id = #{customId}
		<if test="companyId != null and companyId != ''">
            and t.company_id = #{companyId}
        </if>
		<if test="beginMonth != null and beginMonth != ''">
            and t.invoice_date >= STR_TO_DATE(#{beginMonth},'%Y-%m')
        </if>
		<if test="endMonth != null and endMonth != ''">
            and t.invoice_date <![CDATA[ <= ]]> STR_TO_DATE(#{endMonth},'%Y-%m')
        </if>
		group by t.invoice_date
		order by invoice_date
  </select>
  <select id="selectList" resultMap="BaseDetailResultMap">
    select t4.company_party_A_name,t4.company_party_B_name,t4.contract_name,
    t3.invoice_id, t3.company_id, t3.invoice_type, t3.invoice_amount, t3.recv_amount,
      t3.tax, t3.invoice_status,
      t3.recv_date, t3.invoice_content, t3.delivery_id, t3.remark, t3.bank_flow_file, t3.auth_letter_file,
      t3.contract_id,t3.invoice_date
    from custom_info t1,company_info t2,invoice_info t3,contract_info t4
    <where>
        t1.custom_id = t2.custom_id
        and t2.company_id = t3.company_id
        and t3.contract_id = t4.contract_id
        <if test="customId != null and customId != ''">
            and t1.custom_id = #{customId}
        </if>
        <if test="contractId != null and contractId != ''">
            and t3.contract_id = #{contractId}
        </if>
        <if test="companyId != null and companyId != ''">
            and t2.company_id = #{companyId}
        </if>
        <if test="invoiceStatus != null and invoiceStatus != ''">
            and t3.invoice_status = #{invoiceStatus}
        </if>
    </where>
      order by invoice_date desc

  </select>
    <select id="select" resultMap="BaseDetailResultMap">
        select t4.company_party_A_name,t4.company_party_B_name,t4.contract_name,t2.company_name,
        t3.invoice_id, t3.company_id, t3.invoice_type, t3.invoice_amount, t3.recv_amount,
        t3.tax, t3.invoice_status,
        t3.recv_date, t3.invoice_content, t3.delivery_id, t3.remark, t3.bank_flow_file, t3.auth_letter_file,
        t3.contract_id,t3.invoice_date
        from custom_info t1,company_info t2,invoice_info t3,contract_info t4
        <where>
            t1.custom_id = t2.custom_id
            and t2.company_id = t3.company_id
            and t3.contract_id = t4.contract_id
            <if test="invoiceId != null and invoiceId != ''">
                and t3.invoice_id = #{invoiceId}
            </if>
        </where>


    </select>
    <select id="selectTaxStatistic" resultMap="BaseTaxStatisticsResultMap">

        select custom_name,company_name,convert(sum(value_added_tax),decimal(10,4)) value_added_tax,convert(sum(income_tax),decimal(10,4)) income_tax from
        (
        select custom_id,
        custom_name,
        company_id,
        company_name,
        value_added_tax,income*tax_rate - tax_deduction income_tax from
        (
        SELECT
        custom_id,
        custom_name,
        company_id,
        company_name,
        value_added_tax,
        income ,
        t1.tax_rate,
        t1.tax_deduction
        FROM
        (
        SELECT
        custom_id,
        custom_name,
        company_id,
        company_name,
        invoice_amount,
        invoice_amount / ( 1+tax ) * tax value_added_tax,
        ( invoice_amount - invoice_amount / ( 1+tax ) * tax ) * company_tax income
        FROM
        (
        SELECT
        t1.custom_id,
        t2.company_id,
        t1.custom_name,
        t2.company_name,
        sum( t3.invoice_amount ) invoice_amount,
        t3.tax,
        t2.tax company_tax
        FROM
        custom_info t1,
        company_info t2,
        invoice_info t3,
        contract_info t4
        <where>
        t1.custom_id = t2.custom_id
        AND t2.company_id = t3.company_id
        AND t3.contract_id = t4.contract_id
        <if test="registerArea != null and registerArea != ''">
            and t2.register_area = #{registerArea}
        </if>
        <if test="customId != null and customId != ''">
            and t1.custom_id = #{customId}
        </if>
        <if test="areaLevel != null and areaLevel == 'province'">
            and t1.province = #{areaCode}
        </if>
        <if test="areaLevel != null and areaLevel == 'city'">
            and t1.city = #{areaCode}
        </if>
        <if test='areaLevel != null and areaLevel == "district"'>
            and t1.district = #{areaCode}
        </if>
        <if test="invoiceType != null and invoiceType != ''">
            and t3.invoice_type = #{invoiceType}
        </if>
        <if test="beginDate != null and beginDate != ''">
            and t3.invoice_date >= STR_TO_DATE(#{beginDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != ''">
            and t3.invoice_date <![CDATA[ <= ]]> STR_TO_DATE(#{endDate},'%Y-%m-%d')
        </if>

    </where>
        GROUP BY
        t1.custom_id,
        t2.company_id,
        t3.tax
        order by  t3.invoice_date desc
        ) t
        ) t,tax_info t1
        where t.income  BETWEEN t1.tax_limit AND t1.tax_top


        )t
        )t

        GROUP BY
        custom_id,
        company_id

    </select>
    <select id="selectTotalTaxStatistic" resultMap="BaseTaxStatisticsResultMap">

        select custom_name,company_name,convert(sum(value_added_tax),decimal(10,4)) total_value_added_tax,convert(sum(income_tax),decimal(10,4)) total_income_tax from
        (
        select custom_id,
        custom_name,
        company_id,
        company_name,
        value_added_tax,income*tax_rate - tax_deduction income_tax from
        (
        SELECT
        custom_id,
        custom_name,
        company_id,
        company_name,
        value_added_tax,
        income ,
        t1.tax_rate,
        t1.tax_deduction
        FROM
        (
        SELECT
        custom_id,
        custom_name,
        company_id,
        company_name,
        invoice_amount,
        invoice_amount / ( 1+tax ) * tax value_added_tax,
        ( invoice_amount - invoice_amount / ( 1+tax ) * tax ) * company_tax income
        FROM
        (
        SELECT
        t1.custom_id,
        t2.company_id,
        t1.custom_name,
        t2.company_name,
        sum( t3.invoice_amount ) invoice_amount,
        t3.tax,
        t2.tax company_tax
        FROM
        custom_info t1,
        company_info t2,
        invoice_info t3,
        contract_info t4
        <where>
        t1.custom_id = t2.custom_id
        AND t2.company_id = t3.company_id
        AND t3.contract_id = t4.contract_id
        <if test="registerArea != null and registerArea != ''">
            and t2.register_area = #{registerArea}
        </if>
        <if test="customId != null and customId != ''">
            and t1.custom_id = #{customId}
        </if>
        <if test="areaLevel != null and areaLevel == 'province'">
            and t1.province = #{areaCode}
        </if>
        <if test="areaLevel != null and areaLevel == 'city'">
            and t1.city = #{areaCode}
        </if>
        <if test="areaLevel != null and areaLevel == 'district'">
            and t1.district = #{areaCode}
        </if>
        <if test="invoiceType != null and invoiceType != ''">
            and t3.invoice_type = #{invoiceType}
        </if>
        <if test="beginDate != null and beginDate != ''">
            and t3.invoice_date >= STR_TO_DATE(#{beginDate},'%Y-%m-%d')
        </if>
        <if test="endDate != null and endDate != ''">
            and t3.invoice_date <![CDATA[ <= ]]> STR_TO_DATE(#{endDate},'%Y-%m-%d')
        </if>

    </where>
        GROUP BY
        t1.custom_id,
        t2.company_id,
        t3.tax
        order by  t3.invoice_date desc
        ) t
        ) t,tax_info t1
        where t.income  BETWEEN t1.tax_limit AND t1.tax_top


        )t
        )t

    </select>

</mapper>